// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Popover Basic 1`] = `
.c0 {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  padding: 0;
  border-style: none;
  outline: none;
  color: inherit;
  text-rendering: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  word-spacing: inherit;
  font: inherit;
  margin: 0;
  overflow: visible;
  text-transform: none;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c0:focus {
  outline: none;
}

.c0::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c1 {
  width: -webkit-min-content;
  width: -moz-min-content;
  width: min-content;
  display: inline-grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  padding-right: 24px;
  padding-left: 24px;
  border-radius: 999999px;
  -webkit-transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  height: 40px;
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  color: var(--charcoal-text2-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  color: var(--charcoal-text2-press);
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  background-color: var(--charcoal-surface3-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  background-color: var(--charcoal-surface3-press);
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  opacity: 0.32;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled=false]:focus,
.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled=false]:active {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled=false]:focus:not(:focus-visible),
.c1:not(:disabled):not([aria-disabled]):active:not(:focus-visible),
.c1[aria-disabled=false]:active:not(:focus-visible) {
  outline: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled=false]:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

<div
  data-dark={false}
>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "left": 16,
        "position": "absolute",
      }
    }
  >
    open
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "position": "absolute",
        "right": 16,
      }
    }
  >
    open
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "bottom": 16,
        "position": "absolute",
      }
    }
  >
    open
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "bottom": 16,
        "position": "absolute",
        "right": 16,
      }
    }
  >
    open
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "left": "50%",
        "position": "absolute",
        "top": "50%",
      }
    }
  >
    open
  </button>
</div>
`;

exports[`Storyshots Popover Dir 1`] = `
.c0 {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  padding: 0;
  border-style: none;
  outline: none;
  color: inherit;
  text-rendering: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  word-spacing: inherit;
  font: inherit;
  margin: 0;
  overflow: visible;
  text-transform: none;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c0:focus {
  outline: none;
}

.c0::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c1 {
  width: -webkit-min-content;
  width: -moz-min-content;
  width: min-content;
  display: inline-grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  padding-right: 24px;
  padding-left: 24px;
  border-radius: 999999px;
  -webkit-transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  height: 40px;
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  color: var(--charcoal-text2-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  color: var(--charcoal-text2-press);
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  background-color: var(--charcoal-surface3-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  background-color: var(--charcoal-surface3-press);
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  opacity: 0.32;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled=false]:focus,
.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled=false]:active {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled=false]:focus:not(:focus-visible),
.c1:not(:disabled):not([aria-disabled]):active:not(:focus-visible),
.c1[aria-disabled=false]:active:not(:focus-visible) {
  outline: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled=false]:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
        "gap": "24px",
        "height": "calc(100vh - 2rem)",
        "justifyContent": "center",
        "width": "calc(100vw - 2rem)",
      }
    }
  >
    <div
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "24px",
          "justifyContent": "center",
        }
      }
    >
      <button
        className="c0 c1"
        disabled={false}
        onClick={[Function]}
      >
        top right
      </button>
      <button
        className="c0 c1"
        disabled={false}
        onClick={[Function]}
      >
        top
      </button>
      <button
        className="c0 c1"
        disabled={false}
        onClick={[Function]}
      >
        top left
      </button>
    </div>
    <div
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "24px",
          "justifyContent": "center",
        }
      }
    >
      <button
        className="c0 c1"
        disabled={false}
        onClick={[Function]}
      >
        bottom right
      </button>
      <button
        className="c0 c1"
        disabled={false}
        onClick={[Function]}
      >
        bottom
      </button>
      <button
        className="c0 c1"
        disabled={false}
        onClick={[Function]}
      >
        bottom left
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Popover Hover 1`] = `
.c0 {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  padding: 0;
  border-style: none;
  outline: none;
  color: inherit;
  text-rendering: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  word-spacing: inherit;
  font: inherit;
  margin: 0;
  overflow: visible;
  text-transform: none;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c0:focus {
  outline: none;
}

.c0::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c1 {
  width: -webkit-min-content;
  width: -moz-min-content;
  width: min-content;
  display: inline-grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  padding-right: 24px;
  padding-left: 24px;
  border-radius: 999999px;
  -webkit-transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  height: 40px;
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  color: var(--charcoal-text2-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  color: var(--charcoal-text2-press);
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  background-color: var(--charcoal-surface3-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  background-color: var(--charcoal-surface3-press);
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  opacity: 0.32;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled=false]:focus,
.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled=false]:active {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled=false]:focus:not(:focus-visible),
.c1:not(:disabled):not([aria-disabled]):active:not(:focus-visible),
.c1[aria-disabled=false]:active:not(:focus-visible) {
  outline: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled=false]:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

<div
  data-dark={false}
>
  <button
    className="c0 c1"
    disabled={false}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "left": 16,
        "position": "absolute",
      }
    }
  >
    button
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "position": "absolute",
        "right": 16,
      }
    }
  >
    button
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "bottom": 16,
        "position": "absolute",
      }
    }
  >
    button
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "bottom": 16,
        "position": "absolute",
        "right": 16,
      }
    }
  >
    button
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "left": "50%",
        "position": "absolute",
        "top": "50%",
      }
    }
  >
    button
  </button>
</div>
`;

exports[`Storyshots Popover Overflow 1`] = `
.c0 {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  padding: 0;
  border-style: none;
  outline: none;
  color: inherit;
  text-rendering: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  word-spacing: inherit;
  font: inherit;
  margin: 0;
  overflow: visible;
  text-transform: none;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c0:focus {
  outline: none;
}

.c0::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c1 {
  width: -webkit-min-content;
  width: -moz-min-content;
  width: min-content;
  display: inline-grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  padding-right: 24px;
  padding-left: 24px;
  border-radius: 999999px;
  -webkit-transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  height: 40px;
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  color: var(--charcoal-text2-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  color: var(--charcoal-text2-press);
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  background-color: var(--charcoal-surface3-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  background-color: var(--charcoal-surface3-press);
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  opacity: 0.32;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled=false]:focus,
.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled=false]:active {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled=false]:focus:not(:focus-visible),
.c1:not(:disabled):not([aria-disabled]):active:not(:focus-visible),
.c1[aria-disabled=false]:active:not(:focus-visible) {
  outline: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled=false]:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

<div
  data-dark={false}
>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "left": 16,
        "position": "absolute",
      }
    }
  >
    button
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "position": "absolute",
        "right": 16,
      }
    }
  >
    button
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "bottom": 16,
        "position": "absolute",
      }
    }
  >
    button
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "bottom": 16,
        "position": "absolute",
        "right": 16,
      }
    }
  >
    button
  </button>
  <button
    className="c0 c1"
    disabled={false}
    onClick={[Function]}
    style={
      Object {
        "left": "50%",
        "position": "absolute",
        "top": "50%",
      }
    }
  >
    button
  </button>
</div>
`;

exports[`Storyshots Popover Scroll 1`] = `
.c0 {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  padding: 0;
  border-style: none;
  outline: none;
  color: inherit;
  text-rendering: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  word-spacing: inherit;
  font: inherit;
  margin: 0;
  overflow: visible;
  text-transform: none;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c0:focus {
  outline: none;
}

.c0::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c1 {
  width: -webkit-min-content;
  width: -moz-min-content;
  width: min-content;
  display: inline-grid;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  padding-right: 24px;
  padding-left: 24px;
  border-radius: 999999px;
  -webkit-transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  transition: 0.2s color,0.2s background-color,0.2s box-shadow;
  height: 40px;
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  color: var(--charcoal-text2-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  color: var(--charcoal-text2-press);
}

.c1:hover:not(:disabled):not([aria-disabled]),
.c1:hover[aria-disabled=false] {
  background-color: var(--charcoal-surface3-hover);
}

.c1:active:not(:disabled):not([aria-disabled]),
.c1:active[aria-disabled=false] {
  background-color: var(--charcoal-surface3-press);
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  opacity: 0.32;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled=false]:focus,
.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled=false]:active {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled=false]:focus:not(:focus-visible),
.c1:not(:disabled):not([aria-disabled]):active:not(:focus-visible),
.c1[aria-disabled=false]:active:not(:focus-visible) {
  outline: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled=false]:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": 1000,
        "justifyContent": "center",
      }
    }
  >
    <button
      className="c0 c1"
      disabled={false}
      onClick={[Function]}
    >
      open
    </button>
  </div>
</div>
`;
