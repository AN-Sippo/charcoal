// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storybook Tests TextArea AssistiveText 1`] = `
.c3 {
  font-size: 14px;
  line-height: 22px;
  margin: 0;
  color: var(--charcoal-text2);
}

.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
    <p
      className="c3"
    >
      説明が入ります
    </p>
  </div>
</div>
`;

exports[`Storybook Tests TextArea AutoHeight 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextArea Default 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span>
          <button
            className="charcoal-clickable"
            onClick={[Function]}
          >
            Text Link
          </button>
        </span>
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        placeholder="Text Area"
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextArea Disabled 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  opacity: 0.32;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-disabled="true"
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={true}
        id="test-id"
        onChange={[Function]}
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextArea Invalid 1`] = `
.c3 {
  font-size: 14px;
  line-height: 22px;
  margin: 0;
  color: var(--charcoal-assertive);
}

.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
  box-shadow: 0 0 0 4px rgba(255,43,0,0.32);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(255,43,0,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-invalid={true}
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
    <p
      className="c3"
    >
      エラーメッセージ
    </p>
  </div>
</div>
`;

exports[`Storybook Tests TextArea Label 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextArea Placeholder 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        placeholder="Placeholder"
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextArea ReadOnly 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        readOnly={true}
        required={false}
        rows={4}
        value="読み取り専用"
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextArea Required 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-required-text"
      >
        *必須
      </div>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        aria-required={true}
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextArea ShowCount 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 5 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875) 0;
  height: calc(22px / 0.875 * 4 + 9px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

.c3 {
  position: absolute;
  bottom: 9px;
  right: 8px;
  line-height: 22px;
  font-size: 14px;
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      className="c1"
      rows={5}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        maxLength={100}
        onChange={[Function]}
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
      <span
        className="c3"
      >
        0/100
      </span>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextArea SubLabel 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
}

.c1 {
  position: relative;
  overflow: hidden;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  height: calc(22px * 4 + 18px);
}

.c1:not([aria-disabled]):hover,
.c1 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  border: none;
  outline: none;
  resize: none;
  font-family: inherit;
  color: inherit;
  box-sizing: border-box;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding: calc(9px / 0.875) calc(8px / 0.875);
  height: calc(22px / 0.875 * 4 + 20px);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
}

.c2::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c2:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c2::placeholder {
  color: var(--charcoal-text3);
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="charcoal-field-label-root"
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span>
          <button
            className="charcoal-clickable"
          >
            Text Link
          </button>
        </span>
      </div>
    </div>
    <div
      className="c1"
      rows={4}
    >
      <textarea
        aria-labelledby="test-id"
        className="c2"
        disabled={false}
        id="test-id"
        onChange={[Function]}
        readOnly={false}
        required={false}
        rows={4}
        value=""
      />
    </div>
  </div>
</div>
`;
