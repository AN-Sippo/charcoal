// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storybook Tests react/DropdownSelector AssistiveText 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  margin: 0;
  color: var(--charcoal-text2);
}

.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 1
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
      <p
        className="c4"
      >
        assistiveText
      </p>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector CustomChildren 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="bold"
        >
          <option
            value="normal"
          >
            normal
          </option>
          <option
            value="bold"
          >
            bold
          </option>
          <option
            value="italic"
          >
            italic
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          <div
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            Bold
          </div>
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector Default 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value=""
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Placeholder
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector Disabled 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      aria-disabled={true}
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 1
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector DisabledItem 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="2"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            disabled={true}
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
          <option
            value="4"
          >
            4
          </option>
          <option
            value="5"
          >
            5
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 2 (disabled)
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector InFormTag 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <form
    onSubmit={[Function]}
    style={
      Object {
        "display": "flex",
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          name="exampleOption"
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 1
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
    <button
      className="charcoal-button"
      data-variant="Primary"
      style={
        Object {
          "marginLeft": 16,
        }
      }
      type="submit"
    >
      submit
    </button>
  </form>
</div>
`;

exports[`Storybook Tests react/DropdownSelector InModal 1`] = `
<div
  data-dark={false}
>
  <div
    style={
      Object {
        "height": "10px",
      }
    }
  >
    <button
      onClick={[Function]}
    >
      open
    </button>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector Invalid 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c1:not(:disabled):not([aria-disabled]),
.c1[aria-disabled='false'] {
  box-shadow: 0 0 0 4px rgba(255,43,0,0.32);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 1
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector InvalidAssistiveText 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  margin: 0;
  color: var(--charcoal-assertive);
}

.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c1:not(:disabled):not([aria-disabled]),
.c1[aria-disabled='false'] {
  box-shadow: 0 0 0 4px rgba(255,43,0,0.32);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 1
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
      <p
        className="c4"
      >
        assistiveText
      </p>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector Label 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        className="charcoal-field-label-root"
      >
        <label
          className="charcoal-field-label"
        >
          Label
        </label>
        <div
          className="charcoal-field-label-sub-label"
        >
          <span />
        </div>
      </div>
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 1
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector LongNames 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Lorem ipsum dolor sit amet, consectetur adipisicing elit,
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector RequiredText 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c1:not(:disabled):not([aria-disabled]),
.c1[aria-disabled='false'] {
  box-shadow: 0 0 0 4px rgba(255,43,0,0.32);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        className="charcoal-field-label-root"
      >
        <label
          className="charcoal-field-label"
        >
          Label
        </label>
        <div
          className="charcoal-field-label-required-text"
        >
          required
        </div>
        <div
          className="charcoal-field-label-sub-label"
        >
          <span />
        </div>
      </div>
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 1
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector Section 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="banana"
        >
          <option
            value="apple"
          >
            apple
          </option>
          <option
            value="banana"
          >
            banana
          </option>
          <option
            value="orange"
          >
            orange
          </option>
          <option
            value="bicycle"
          >
            bicycle
          </option>
          <option
            value="car"
          >
            car
          </option>
          <option
            value="train"
          >
            train
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Banana
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests react/DropdownSelector SubLabel 1`] = `
.c0 {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4px;
  width: 100%;
}

.c0:disabled,
.c0[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
  opacity: 0.32;
}

.c1 {
  display: grid;
  grid-template-columns: 1fr auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 40px;
  width: 100%;
  box-sizing: border-box;
  border: none;
  cursor: pointer;
  gap: 4px;
  padding-right: 8px;
  padding-left: 8px;
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  -webkit-transition: 0.2s box-shadow,0.2s background-color;
  transition: 0.2s box-shadow,0.2s background-color;
}

.c1:disabled,
.c1[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c1:not(:disabled):not([aria-disabled]):focus,
.c1[aria-disabled='false']:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):focus:not(:focus-visible),
.c1[aria-disabled='false']:focus:not(:focus-visible) {
  box-shadow: none;
}

.c1:not(:disabled):not([aria-disabled]):focus-visible,
.c1[aria-disabled='false']:focus-visible {
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c1:not(:disabled):not([aria-disabled]):hover,
.c1[aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c1:not(:disabled):not([aria-disabled]):active,
.c1[aria-disabled='false']:active {
  background-color: var(--charcoal-surface3-press);
}

.c1:not(:disabled):not([aria-disabled]),
.c1[aria-disabled='false'] {
  box-shadow: 0 0 0 4px rgba(255,43,0,0.32);
}

.c2 {
  text-align: left;
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  color: var(--charcoal-text2);
}

<div
  data-dark={false}
>
  <div
    style={
      Object {
        "width": 288,
      }
    }
  >
    <div
      className="c0"
    >
      <div
        className="charcoal-field-label-root"
      >
        <label
          className="charcoal-field-label"
        >
          Label
        </label>
        <div
          className="charcoal-field-label-sub-label"
        >
          <span>
            SubLabel
          </span>
        </div>
      </div>
      <div
        aria-hidden="true"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <select
          onChange={[Function]}
          tabIndex={-1}
          value="1"
        >
          <option
            value="1"
          >
            1
          </option>
          <option
            value="2"
          >
            2
          </option>
          <option
            value="3"
          >
            3
          </option>
        </select>
      </div>
      <button
        className="c1"
        onClick={[Function]}
        type="button"
      >
        <span
          className="c2"
        >
          Option 1
        </span>
        <pixiv-icon
          class="c3"
          name="16/Menu"
        />
      </button>
    </div>
  </div>
</div>
`;
