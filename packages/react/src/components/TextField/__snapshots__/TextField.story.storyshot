// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storybook Tests TextField Affix 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: auto 1fr auto;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.c9 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c9::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c9::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c9:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c9::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <div
          className="c8"
        >
          /home/john/
        </div>
        <input
          aria-labelledby="test-id"
          className="c9"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
        <span
          className="c10"
        >
          .png
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField AssistiveText 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c8 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c8::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c8:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::placeholder {
  color: var(--charcoal-text3);
}

.c9 {
  font-size: 14px;
  line-height: 22px;
  margin-top: 4px;
  margin-bottom: -4px;
  color: var(--charcoal-text2);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <input
          aria-labelledby="test-id"
          className="c8"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
      <p
        className="c9"
      >
        Assistive Text
      </p>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField Default 1`] = `
.c7 {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  padding: 0;
  border-style: none;
  outline: none;
  color: inherit;
  text-rendering: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  word-spacing: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  font: inherit;
  margin: 0;
  overflow: visible;
  text-transform: none;
}

.c7:disabled,
.c7[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c7:focus {
  outline: none;
}

.c7::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c8 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c8:not(:disabled):not([aria-disabled]):hover,
.c8 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c8:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c9 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c9::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c9::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c9:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c9::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span>
            <button
              className="c7"
            >
              Text Link
            </button>
          </span>
        </div>
      </div>
      <div
        className="c8"
      >
        <input
          aria-labelledby="test-id"
          className="c9"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          placeholder="TextField"
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField Disabled 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  opacity: 0.32;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c8 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c8::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c8:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        aria-disabled={true}
        className="c7"
      >
        <input
          aria-labelledby="test-id"
          className="c8"
          disabled={true}
          id="test-id"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField Invalid 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
  box-shadow: 0 0 0 4px rgba(255,43,0,0.32);
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(255,43,0,0.32);
}

.c8 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c8::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c8:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::placeholder {
  color: var(--charcoal-text3);
}

.c9 {
  font-size: 14px;
  line-height: 22px;
  margin-top: 4px;
  margin-bottom: -4px;
  color: var(--charcoal-assertive);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <input
          aria-invalid={true}
          aria-labelledby="test-id"
          className="c8"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
      <p
        className="c9"
      >
        error message
      </p>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField Label 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c8 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c8::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c8:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <input
          aria-labelledby="test-id"
          className="c8"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField Number 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c8 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c8::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c8:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
        />
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <input
          className="c8"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          onWheel={[Function]}
          readOnly={false}
          required={false}
          type="number"
          value="0"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField Placeholder 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c8 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c8::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c8:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <input
          aria-labelledby="test-id"
          className="c8"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          placeholder="Placeholder"
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField Prefix 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: auto 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c10::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c10::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c10:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c10::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: #858585;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <pixiv-icon
              name="16/Search"
            />
          </div>
        </div>
        <input
          aria-labelledby="test-id"
          className="c10"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField ReadOnly 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c8 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c8::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c8:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <input
          aria-labelledby="test-id"
          className="c8"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          readOnly={true}
          required={false}
          type="text"
          value="読み取り専用"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField RequiredText 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text2);
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c8 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c8::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c8::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c8:not(:disabled):not([aria-disabled]):hover,
.c8[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c8:not(:disabled):not([aria-disabled]):active,
.c8[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c8:not(:disabled):not([aria-disabled]):active,
.c8[aria-disabled='false']:active,
.c8:not(:disabled):not([aria-disabled]):focus,
.c8[aria-disabled='false']:focus,
.c8:not(:disabled):not([aria-disabled]):focus-visible,
.c8[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: 4px;
}

.c2 > .c7 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c9 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c9:not(:disabled):not([aria-disabled]):hover,
.c9 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c9:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c10 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c10::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c10::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c10:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c10::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <span
          className="c5 c6"
        >
          *必須
        </span>
        <div
          className="c7 c8"
        >
          <span />
        </div>
      </div>
      <div
        className="c9"
      >
        <input
          aria-labelledby="test-id"
          aria-required={true}
          className="c10"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField ShowCount 1`] = `
.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c7 {
  display: grid;
  grid-template-columns: 1fr auto;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c7:not(:disabled):not([aria-disabled]):hover,
.c7 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c7:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 8px;
}

.c8 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c8::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c8:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c8::placeholder {
  color: var(--charcoal-text3);
}

.c10 {
  line-height: 22px;
  font-size: 14px;
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span />
        </div>
      </div>
      <div
        className="c7"
      >
        <input
          aria-labelledby="test-id"
          className="c8"
          disabled={false}
          id="test-id"
          maxLength={100}
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
        <span
          className="c9"
        >
          <span
            className="c10"
          >
            0/100
          </span>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests TextField SubLabel 1`] = `
.c7 {
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  padding: 0;
  border-style: none;
  outline: none;
  color: inherit;
  text-rendering: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  word-spacing: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  font: inherit;
  margin: 0;
  overflow: visible;
  text-transform: none;
}

.c7:disabled,
.c7[aria-disabled]:not([aria-disabled=false]) {
  cursor: default;
}

.c7:focus {
  outline: none;
}

.c7::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

.c4 {
  font-size: 14px;
  line-height: 22px;
  font-weight: bold;
  display: flow-root;
  color: var(--charcoal-text1);
}

.c4::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c4::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6 {
  font-size: 14px;
  line-height: 22px;
  display: flow-root;
  color: var(--charcoal-text3);
  -webkit-transition: 0.2s color,0.2s box-shadow;
  transition: 0.2s color,0.2s box-shadow;
}

.c6::before {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-top: -4px;
}

.c6::after {
  display: block;
  width: 0;
  height: 0;
  content: '';
  margin-bottom: -4px;
}

.c6:not(:disabled):not([aria-disabled]):hover,
.c6[aria-disabled='false']:hover {
  color: var(--charcoal-text3-hover);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active {
  color: var(--charcoal-text3-press);
}

.c6:not(:disabled):not([aria-disabled]):active,
.c6[aria-disabled='false']:active,
.c6:not(:disabled):not([aria-disabled]):focus,
.c6[aria-disabled='false']:focus,
.c6:not(:disabled):not([aria-disabled]):focus-visible,
.c6[aria-disabled='false']:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > .c5 {
  margin-left: auto;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  margin-bottom: 8px;
}

.c8 {
  display: grid;
  grid-template-columns: 1fr;
  height: 40px;
  -webkit-transition: 0.2s background-color,0.2s box-shadow;
  transition: 0.2s background-color,0.2s box-shadow;
  color: var(--charcoal-text2);
  background-color: var(--charcoal-surface3);
  border-radius: 4px;
  gap: 4px;
  padding: 0 8px;
  line-height: 22px;
  font-size: 14px;
}

.c8:not(:disabled):not([aria-disabled]):hover,
.c8 [aria-disabled='false']:hover {
  background-color: var(--charcoal-surface3-hover);
}

.c8:focus-within {
  outline: none;
  box-shadow: 0 0 0 4px rgba(0,150,250,0.32);
}

.c9 {
  border: none;
  box-sizing: border-box;
  outline: none;
  font-family: inherit;
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transform: scale(0.875);
  -ms-transform: scale(0.875);
  transform: scale(0.875);
  width: calc(100% / 0.875);
  height: calc(100% / 0.875);
  font-size: calc(14px / 0.875);
  line-height: calc(22px / 0.875);
  padding-left: 0;
  padding-right: 0;
  border-radius: calc(4px / 0.875);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  color: var(--charcoal-text2);
}

.c9::-webkit-input-placeholder {
  color: var(--charcoal-text3);
}

.c9::-moz-placeholder {
  color: var(--charcoal-text3);
}

.c9:-ms-input-placeholder {
  color: var(--charcoal-text3);
}

.c9::placeholder {
  color: var(--charcoal-text3);
}

.c0 {
  display: grid;
  gap: 24px;
}

<div
  data-dark={false}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <div
        className="c2 c3"
        style={
          Object {
            "border": 0,
            "clip": "rect(0 0 0 0)",
            "clipPath": "inset(50%)",
            "height": "1px",
            "margin": "-1px",
            "overflow": "hidden",
            "padding": 0,
            "position": "absolute",
            "whiteSpace": "nowrap",
            "width": "1px",
          }
        }
      >
        <label
          className="c4"
          htmlFor="test-id"
          id="test-id"
        >
          Label
        </label>
        <div
          className="c5 c6"
        >
          <span>
            <button
              className="c7"
            >
              Text Link
            </button>
          </span>
        </div>
      </div>
      <div
        className="c8"
      >
        <input
          aria-labelledby="test-id"
          className="c9"
          disabled={false}
          id="test-id"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
</div>
`;
