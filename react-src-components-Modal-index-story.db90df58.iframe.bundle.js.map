{"version":3,"file":"react-src-components-Modal-index-story.db90df58.iframe.bundle.js","mappings":";;;AA2CA;;AAUA;AAGA;AAZA;;;AAkBA;;;;;AAKA","sources":["webpack://charcoal-ui/./packages/react/src/components/Modal/__stories__/InternalScrollStory.tsx"],"sourcesContent":["import { Story } from '../../../_lib/compat'\nimport Modal, { BottomSheet, ModalProps } from '..'\nimport { OverlayProvider } from '@react-aria/overlays'\nimport { useOverlayTriggerState } from 'react-stately'\nimport Button from '../../Button'\nimport { ModalBody, ModalButtons, ModalHeader } from '../ModalPlumbing'\nimport styled, { css } from 'styled-components'\nimport { maxWidth } from '@charcoal-ui/utils'\n\nexport const InternalScrollStory: Story<ModalProps> = (args: ModalProps) => {\n  const state = useOverlayTriggerState({})\n  return (\n    <OverlayProvider>\n      <Button onClick={() => state.open()}>Open Modal</Button>\n\n      <Modal {...args} isOpen={state.isOpen} onClose={() => state.close()}>\n        <ModalHeader />\n        <ModalBody>\n          <ModalBodyOverflowDiv $offset={56} $bottomSheet={args.bottomSheet}>\n            <div\n              style={{\n                height: 1000,\n                background: `linear-gradient(#e66465, #9198e5)`,\n              }}\n            ></div>\n          </ModalBodyOverflowDiv>\n          <TopBorderButtons>\n            <Button fullWidth onClick={() => state.close()}>\n              Close\n            </Button>\n          </TopBorderButtons>\n        </ModalBody>\n      </Modal>\n    </OverlayProvider>\n  )\n}\n\n// underlay padding-top: 40px (desktop)\n// underlay padding-bottom: 40px (desktop)\n// modal header: 64px (desktop)\n// modal header: 48px (mobile-bottom-sheet)\n// modal padding-bottom: 40px\n// button and space: 56px\nconst MAX_HEIGHT_OFFSET = 64 + 40 + 40 + 40\nconst MAX_HEIGHT_OFFSET_MOBILE = MAX_HEIGHT_OFFSET - 40 * 2 - 16\nconst ModalBodyOverflowDiv = styled.div<{\n  $offset: number\n  $bottomSheet?: BottomSheet\n}>`\n  overflow: auto;\n  max-height: calc(\n    100vh - ${MAX_HEIGHT_OFFSET}px - ${({ $offset }) => $offset}px\n  );\n  ${({ $bottomSheet, $offset }) =>\n    ($bottomSheet === true || $bottomSheet === 'full') &&\n    css`\n      @media ${({ theme }) => maxWidth(theme.breakpoint.screen1)} {\n        max-height: calc(100vh - ${MAX_HEIGHT_OFFSET_MOBILE}px - ${$offset}px);\n      }\n    `}\n`\n\nconst TopBorderButtons = styled(ModalButtons)`\n  position: relative;\n  &::before {\n    content: '';\n    pointer-events: none;\n    border-top: 1px solid ${({ theme }) => theme.border.default.color};\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n  }\n`\n"],"names":[],"sourceRoot":""}